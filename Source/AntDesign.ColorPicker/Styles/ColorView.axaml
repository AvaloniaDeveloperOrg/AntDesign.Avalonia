<ResourceDictionary xmlns="https://github.com/avaloniaui"
				    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="using:Avalonia.Controls"
					xmlns:primitives="using:Avalonia.Controls.Primitives"
					x:CompileBindings="True">

	<ControlTheme x:Key="{x:Type ColorView}" TargetType="ColorView">
		<Setter Property="Width" Value="{DynamicResource ColorViewWidth}"/>
		<Setter Property="Height" Value="{DynamicResource ColorViewHeight}"/>
		<Setter Property="Background" Value="{DynamicResource ColorViewBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ColorViewBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ColorViewBorderThicknesss}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ColorViewCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ColorViewPadding}" />
		<Setter Property="Palette">
			<controls:FluentColorPalette />
		</Setter>
		<Setter Property="Template">
			<ControlTemplate TargetType="{x:Type ColorView}">
				<Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						Padding="{TemplateBinding Padding}">
					<Grid RowDefinitions="Auto,Auto">
						
						<TabControl x:Name="PART_TabControl"
									Grid.Row="0"
									Height="{DynamicResource ColorViewTabHeight}"
									Width="{DynamicResource ColorViewTabWidth}"
									SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									Padding="0"
									ClipToBounds="false">
							<TabControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid Columns="0" Rows="1" />
								</ItemsPanelTemplate>
							</TabControl.ItemsPanel>

							<!-- Spectrum Tab -->
							<TabItem IsVisible="{TemplateBinding IsColorSpectrumVisible}" ClipToBounds="false">
								<TabItem.Header>
									<Border Height="{DynamicResource ColorViewTabStripHeight}">
										<PathIcon Width="{DynamicResource ColorViewTabIconSize}"
												  Height="{DynamicResource ColorViewTabIconSize}"
												  Data="{DynamicResource ColorViewSpectrumIconGeometry}" />
									</Border>
								</TabItem.Header>
								<Grid RowDefinitions="*" Margin="{DynamicResource ColorViewTabItemMargin}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MinWidth="{DynamicResource ColorViewSpectrumTabComponentMinWidth}" />
										<ColumnDefinition Width="{DynamicResource ColorViewSpectrumTabComponentSpacing}"/>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="{DynamicResource ColorViewSpectrumTabComponentSpacing}"/>
										<ColumnDefinition Width="Auto" MinWidth="{DynamicResource ColorViewSpectrumTabComponentMinWidth}" />
									</Grid.ColumnDefinitions>
									
									<primitives:ColorSlider x:Name="ColorSpectrumThirdComponentSlider"
															AutomationProperties.Name="Third Component"
															Grid.Column="0"
															Orientation="Vertical"
															IsAlphaMaxForced="True"
															IsSaturationValueMaxForced="False"
															IsVisible="{TemplateBinding IsColorSpectrumSliderVisible}"
															ColorModel="Hsva"
															ColorComponent="{Binding ThirdComponent, ElementName=ColorSpectrum}"
															HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
															HorizontalAlignment="Center"
															VerticalAlignment="Stretch"/>

									<primitives:ColorSpectrum x:Name="ColorSpectrum"
															  Grid.Column="2"
															  Components="{TemplateBinding ColorSpectrumComponents}"
															  HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
															  MinHue="{TemplateBinding MinHue}"
															  MaxHue="{TemplateBinding MaxHue}"
															  MinSaturation="{TemplateBinding MinSaturation}"
															  MaxSaturation="{TemplateBinding MaxSaturation}"
															  MinValue="{TemplateBinding MinValue}"
															  MaxValue="{TemplateBinding MaxValue}"
															  Shape="{TemplateBinding ColorSpectrumShape}"
															  HorizontalAlignment="Stretch"
															  VerticalAlignment="Stretch" />

									<primitives:ColorSlider x:Name="ColorSpectrumAlphaSlider"
															AutomationProperties.Name="Alpha Component"
															Grid.Column="4"
															Orientation="Vertical"
															IsEnabled="{TemplateBinding IsAlphaEnabled}"
															ColorModel="Hsva"
															ColorComponent="Alpha"
															HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
															HorizontalAlignment="Center"
															VerticalAlignment="Stretch">

										<primitives:ColorSlider.IsVisible>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsAlphaVisible" />
											</MultiBinding>
										</primitives:ColorSlider.IsVisible>
									</primitives:ColorSlider>
								
								</Grid>
							</TabItem>

							<!-- Palette Tab -->
							<TabItem IsVisible="{TemplateBinding IsColorPaletteVisible}" ClipToBounds="false">
								<TabItem.Header>
									<Border Height="{DynamicResource ColorViewTabStripHeight}">
										<PathIcon Width="{DynamicResource ColorViewTabIconSize}"
												  Height="{DynamicResource ColorViewTabIconSize}"
												  Data="{DynamicResource ColorViewPaletteIconGeometry}" />
									</Border>
								</TabItem.Header>
								<ListBox ItemsSource="{TemplateBinding PaletteColors}"
										 SelectedItem="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNothingForNullConverter}, Mode=TwoWay}"
										 Theme="{StaticResource ColorViewPaletteListBoxStyle}"
										 ItemContainerTheme="{StaticResource ColorViewPaletteListBoxItemStyle}" 
										 Margin="{DynamicResource ColorViewTabItemMargin}"
										 UseLayoutRounding="False">
									<ListBox.ItemTemplate>
										<DataTemplate DataType="{x:Type Color}">
											<Border AutomationProperties.Name="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
													ToolTip.Tip="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
													HorizontalAlignment="Stretch"
													VerticalAlignment="Stretch">
												<Border.Background>
													<SolidColorBrush Color="{Binding}" />
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBox.ItemTemplate>
									<ListBox.ItemsPanel>
										<ItemsPanelTemplate>
											<UniformGrid Columns="{Binding $parent[ColorView].PaletteColumnCount}" />
										</ItemsPanelTemplate>
									</ListBox.ItemsPanel>
								</ListBox>
							</TabItem>

							<!-- Components Tab -->
							<TabItem IsVisible="{TemplateBinding IsColorComponentsVisible}" ClipToBounds="false">
								<TabItem.Header>
									<Border Height="{DynamicResource ColorViewTabStripHeight}">
										<PathIcon Width="{DynamicResource ColorViewTabIconSize}"
												  Height="{DynamicResource ColorViewTabIconSize}"
												  Data="{DynamicResource ColorViewComponentsIconGeometry}" />
									</Border>
								</TabItem.Header>
								<Grid ColumnDefinitions="Auto,Auto,*"
									  RowDefinitions="Auto,24,1*,1*,1*,1*,12"
									  Margin="{DynamicResource ColorViewTabItemMargin}">

									<Grid Grid.Column="0"
										  Grid.ColumnSpan="3"
										  Grid.Row="0"
										  ColumnDefinitions="1*,12,1*">

										<Grid ColumnDefinitions="1*,1*"
											  IsVisible="{TemplateBinding IsColorModelVisible}">

											<RadioButton x:Name="RgbRadioButton"
														 Grid.Column="0"
														 Theme="{StaticResource ColorViewRadioButtonLikeButtonStyle}"
														 Content="RGB"
														 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=TwoWay}" 
														 BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
														 CornerRadius="{StaticResource ColorViewLeftCornerRadius}" />

											<RadioButton x:Name="HsvRadioButton"
														 Grid.Column="1"
														 Theme="{StaticResource ColorViewRadioButtonLikeButtonStyle}"
														 Content="HSV"
														 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=TwoWay}" 
														 BorderThickness="{StaticResource ColorViewRightBorderThickness}"
														 CornerRadius="{StaticResource ColorViewRightCornerRadius}" />
										</Grid>

										<Grid x:Name="HexInputGrid"
											  Grid.Column="2"
											  Height="{DynamicResource ColorViewComponentsBorderHeight}"
											  IsVisible="{TemplateBinding IsHexInputVisible}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{DynamicResource ColorViewComponentsGridWidth}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<Border Grid.Column="0"
													Background="{DynamicResource ColorViewBackground}"
													BorderBrush="{DynamicResource ColorViewBorderBrush}"
													BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
													CornerRadius="{StaticResource ColorViewLeftCornerRadius}">
												<TextBlock Text="#"
														   FontWeight="SemiBold"
														   HorizontalAlignment="Center"
														   VerticalAlignment="Center" />
											</Border>

											<TextBox x:Name="PART_HexTextBox"
													 AutomationProperties.Name="Hexadecimal Color"
													 Grid.Column="1"
													 MaxLength="9"
													 HorizontalAlignment="Stretch"
													 CornerRadius="{StaticResource ColorViewRightCornerRadius}" />
										</Grid>
									</Grid>

									<!-- Component 1 RGB:Red HSV:Hue -->
									<Border Grid.Column="0"
											Grid.Row="2"
											Width="{DynamicResource ColorViewComponentLabelWidth}"
											Height="{Binding ElementName=Component1NumericUpDown, Path=Bounds.Height}"
											IsVisible="{TemplateBinding IsComponentTextInputVisible}"
											Background="{DynamicResource ColorViewBackground}"
											BorderBrush="{DynamicResource ColorViewBorderBrush}"
											BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
											CornerRadius="{StaticResource ColorViewLeftCornerRadius}"
											VerticalAlignment="Center">
										<Panel HorizontalAlignment="Center"
											   VerticalAlignment="Center">
											<TextBlock FontWeight="SemiBold"
													   Text="R"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}"/>
											<TextBlock FontWeight="SemiBold"
													   Text="H"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
										</Panel>
									</Border>

									<NumericUpDown x:Name="Component1NumericUpDown"
												   Grid.Column="1"
												   Grid.Row="2"
												   Height="32"
												   Width="{DynamicResource ColorViewComponentTextInputWidth}"
												   AllowSpin="True"
												   ShowButtonSpinner="False"
												   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
												   Minimum="{Binding Minimum, ElementName=Component1Slider}"
												   Maximum="{Binding Maximum, ElementName=Component1Slider}"
												   Value="{Binding Value, ElementName=Component1Slider}"
												   IsVisible="{TemplateBinding IsComponentTextInputVisible}" 
												   CornerRadius="{StaticResource ColorViewRightCornerRadius}"
												   Margin="{StaticResource ColorViewSpacingMargin}"
												   VerticalAlignment="Center"/>

									<primitives:ColorSlider x:Name="Component1Slider"
															Grid.Column="2"
															Grid.Row="2"
															Orientation="Horizontal"
															IsRoundingEnabled="True"
															IsSnapToTickEnabled="True"
															TickFrequency="1"
															ColorComponent="Component1"
															ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
															HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
															HorizontalAlignment="Stretch"
															VerticalAlignment="Center"
															IsVisible="{TemplateBinding IsComponentSliderVisible}" />

									<!-- Component 2 RGB:Green HSV:Saturation -->
									<Border Grid.Column="0"
											Grid.Row="3"
											Width="{DynamicResource ColorViewComponentLabelWidth}"
											Height="{Binding ElementName=Component2NumericUpDown, Path=Bounds.Height}"
											Background="{DynamicResource ColorViewBackground}"
											BorderBrush="{DynamicResource ColorViewBorderBrush}"
											BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
											CornerRadius="{StaticResource ColorViewLeftCornerRadius}"
											VerticalAlignment="Center"
											IsVisible="{TemplateBinding IsComponentTextInputVisible}">
										<Panel HorizontalAlignment="Center"
											   VerticalAlignment="Center">
											<TextBlock FontWeight="SemiBold"
													   Text="G"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
											<TextBlock FontWeight="SemiBold"
													   Text="S"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
										</Panel>
									</Border>

									<NumericUpDown x:Name="Component2NumericUpDown"
												   Grid.Column="1"
												   Grid.Row="3"
												   Height="32"
												   Width="{DynamicResource ColorViewComponentTextInputWidth}"
												   AllowSpin="True"
												   ShowButtonSpinner="False"
												   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
												   Minimum="{Binding Minimum, ElementName=Component2Slider}"
												   Maximum="{Binding Maximum, ElementName=Component2Slider}"
												   Value="{Binding Value, ElementName=Component2Slider}"
												   IsVisible="{TemplateBinding IsComponentTextInputVisible}"
												   CornerRadius="{StaticResource ColorViewRightCornerRadius}"
												   Margin="{StaticResource ColorViewSpacingMargin}"
												   VerticalAlignment="Center"/>

									<primitives:ColorSlider x:Name="Component2Slider"
															Grid.Column="2"
															Grid.Row="3"
															Orientation="Horizontal"
															IsRoundingEnabled="True"
															IsSnapToTickEnabled="True"
															TickFrequency="1"
															ColorComponent="Component2"
															ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
															HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
															HorizontalAlignment="Stretch"
															VerticalAlignment="Center"
															IsVisible="{TemplateBinding IsComponentSliderVisible}" />

									<!-- Component 3 RGB:Blue HSV:Value -->
									<Border Grid.Column="0"
											Grid.Row="4"
											Width="{DynamicResource ColorViewComponentLabelWidth}"
											Height="{Binding ElementName=Component3NumericUpDown, Path=Bounds.Height}"
											Background="{DynamicResource ColorViewBackground}"
											BorderBrush="{DynamicResource ColorViewBorderBrush}"
											BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
											CornerRadius="{StaticResource ColorViewLeftCornerRadius}"
											VerticalAlignment="Center"
											IsVisible="{TemplateBinding IsComponentTextInputVisible}">
										<Panel HorizontalAlignment="Center"
											   VerticalAlignment="Center">
											<TextBlock FontWeight="SemiBold"
													   Text="B"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
											<TextBlock FontWeight="SemiBold"
													   Text="V"
													   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
										</Panel>
									</Border>

									<NumericUpDown x:Name="Component3NumericUpDown"
												   Grid.Column="1"
												   Grid.Row="4"
												   Height="32"
												   Width="{DynamicResource ColorViewComponentTextInputWidth}"
												   AllowSpin="True"
												   ShowButtonSpinner="False"
												   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
												   Minimum="{Binding Minimum, ElementName=Component3Slider}"
												   Maximum="{Binding Maximum, ElementName=Component3Slider}"
												   Value="{Binding Value, ElementName=Component3Slider}"
												   IsVisible="{TemplateBinding IsComponentTextInputVisible}" 
												   CornerRadius="{StaticResource ColorViewRightCornerRadius}"
												   Margin="{StaticResource ColorViewSpacingMargin}"
												   VerticalAlignment="Center" />

									<primitives:ColorSlider x:Name="Component3Slider"
															Grid.Column="2"
															Grid.Row="4"
															Orientation="Horizontal"
															IsRoundingEnabled="True"
															IsSnapToTickEnabled="True"
															TickFrequency="1"
															ColorComponent="Component3"
															ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
															HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
															HorizontalAlignment="Stretch"
															VerticalAlignment="Center"
															IsVisible="{TemplateBinding IsComponentSliderVisible}" />

									<!-- Alpha Component -->
									<Border Grid.Column="0"
											Grid.Row="5" 
											Width="{DynamicResource ColorViewComponentLabelWidth}"
											Height="{Binding ElementName=AlphaComponentNumericUpDown, Path=Bounds.Height}"
											Background="{DynamicResource ColorViewBackground}"
											BorderBrush="{DynamicResource ColorViewBorderBrush}"
											BorderThickness="{StaticResource ColorViewLeftBorderThickness}"
											CornerRadius="{StaticResource ColorViewLeftCornerRadius}"
											VerticalAlignment="Center"
											IsEnabled="{TemplateBinding IsAlphaEnabled}">
										<TextBlock x:Name="AlphaComponentTextBlock"
												   FontWeight="SemiBold"
												   Text="A"
												   HorizontalAlignment="Center"
												   VerticalAlignment="Center" />
										<Border.IsVisible>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsAlphaVisible" />
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsComponentTextInputVisible" />
											</MultiBinding>
										</Border.IsVisible>
									</Border>

									<NumericUpDown x:Name="AlphaComponentNumericUpDown"
												   Grid.Column="1"
												   Grid.Row="5"
												   Height="32"
												   Width="{DynamicResource ColorViewComponentTextInputWidth}"
												   AllowSpin="True"
												   ShowButtonSpinner="False"
												   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
												   Minimum="{Binding Minimum, ElementName=AlphaComponentSlider}"
												   Maximum="{Binding Maximum, ElementName=AlphaComponentSlider}"
												   Value="{Binding Value, ElementName=AlphaComponentSlider}"
												   IsEnabled="{TemplateBinding IsAlphaEnabled}"
												   CornerRadius="{StaticResource ColorViewRightCornerRadius}"
												   Margin="{StaticResource ColorViewSpacingMargin}"
												   VerticalAlignment="Center" >
										<NumericUpDown.IsVisible>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsAlphaVisible" />
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsComponentTextInputVisible" />
											</MultiBinding>
										</NumericUpDown.IsVisible>
									</NumericUpDown>

									<primitives:ColorSlider x:Name="AlphaComponentSlider"
															Grid.Column="2"
															Grid.Row="5"
															Orientation="Horizontal"
															IsRoundingEnabled="True"
															IsSnapToTickEnabled="True"
															TickFrequency="1"
															ColorComponent="Alpha"
															ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
															HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
															HorizontalAlignment="Stretch"
															VerticalAlignment="Center"
															IsEnabled="{TemplateBinding IsAlphaEnabled}">
										<primitives:ColorSlider.IsVisible>
											<MultiBinding Converter="{x:Static BoolConverters.And}">
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsAlphaVisible" />
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="IsComponentSliderVisible" />
											</MultiBinding>
										</primitives:ColorSlider.IsVisible>
									</primitives:ColorSlider>
								</Grid>
							</TabItem>
							
						</TabControl>

						<primitives:ColorPreviewer Grid.Row="1"
												   HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
												   IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
												   IsVisible="{TemplateBinding IsColorPreviewVisible}" />
					</Grid>
				</Border>
			</ControlTemplate>
		</Setter>
	</ControlTheme>

</ResourceDictionary>
