<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:assists="using:AntDesign.Assists"
					x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Orientation="Vertical" Spacing="20" Width="350" Height="600">
				<Expander ExpandDirection="Up" Header="Expand Up">
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
				<Expander ExpandDirection="Down" Header="Expand Down">
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
				<Expander ExpandDirection="Left" Header="Expand Left">
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
				<Expander ExpandDirection="Right" Header="Expand Right">
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
				<Expander ExpandDirection="Up">
					<Expander.Header>
						<Grid ColumnDefinitions="*, Auto">
							<TextBlock Grid.Column="0" Text="Control" />
							<TextBlock Grid.Column="1" Text="Header" />
						</Grid>
					</Expander.Header>
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
				<Expander ExpandDirection="Up" Header="Rounded" CornerRadius="25">
					<StackPanel>
						<TextBlock>Expanded content</TextBlock>
					</StackPanel>
				</Expander>
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type Expander}" TargetType="Expander">
		<Setter Property="IsTabStop" Value="False"/> 
		<Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
		<Setter Property="Background" Value="{DynamicResource ExpanderBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ExpanderForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ExpanderBorderBrush}" />
		<Setter Property="assists:ExpanderAssists.HeaderBackground" Value="{DynamicResource ButtonPointerOverBackground}" />
		<Setter Property="assists:ExpanderAssists.HeaderForeground" Value="{DynamicResource ButtonPointerOverForeground}" />
		<Setter Property="assists:ExpanderAssists.HeaderPointerOverBackground" Value="{DynamicResource ButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ExpanderAssists.HeaderPointerOverForeground" Value="{DynamicResource ButtonPressedBackground}" />
		<Setter Property="assists:ExpanderAssists.HeaderPressedBackground" Value="{DynamicResource ButtonPressedForeground}" />
		<Setter Property="assists:ExpanderAssists.HeaderPressedForeground" Value="{DynamicResource ButtonPressedBorderBrush}" />
		<Setter Property="assists:ExpanderAssists.HeaderSelectedBackground" Value="{DynamicResource ButtonPressedForeground}" />
		<Setter Property="assists:ExpanderAssists.HeaderSelectedForeground" Value="{DynamicResource ButtonPressedBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ExpanderBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ExpanderCornerRadius}" />
		<Setter Property="Padding" Value="{StaticResource ExpanderPadding}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Template">
			<ControlTemplate>
				<DockPanel MinWidth="{TemplateBinding MinWidth}"
						   MaxWidth="{TemplateBinding MaxWidth}">
					<ToggleButton x:Name="ExpanderHeader"
								  IsEnabled="{TemplateBinding IsEnabled}"
								  MinHeight="{TemplateBinding MinHeight}"
								  Background="{TemplateBinding assists:ExpanderAssists.HeaderBackground}"
								  Foreground="{TemplateBinding assists:ExpanderAssists.HeaderForeground}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  assists:ToggleButtonAssists.PointerOverBackground="{TemplateBinding assists:ExpanderAssists.HeaderPointerOverBackground}"
								  assists:ToggleButtonAssists.PointerOverForeground="{TemplateBinding assists:ExpanderAssists.HeaderPointerOverForeground}"
								  assists:ToggleButtonAssists.PointerOverBorderBrush="{TemplateBinding BorderBrush}"
								  assists:ToggleButtonAssists.PressedBackground="{TemplateBinding assists:ExpanderAssists.HeaderPressedBackground}"
								  assists:ToggleButtonAssists.PressedForeground="{TemplateBinding assists:ExpanderAssists.HeaderPressedForeground}"
								  assists:ToggleButtonAssists.PressedBorderBrush="{TemplateBinding BorderBrush}"
								  assists:ToggleButtonAssists.CheckedBackground="{TemplateBinding assists:ExpanderAssists.HeaderSelectedBackground}"
								  assists:ToggleButtonAssists.CheckedForeground="{TemplateBinding assists:ExpanderAssists.HeaderSelectedForeground}"
								  assists:ToggleButtonAssists.CheckedBorderBrush="{TemplateBinding BorderBrush}"
								  assists:ToggleButtonAssists.IsRipple="false"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Content="{TemplateBinding Header}"
								  ContentTemplate="{TemplateBinding HeaderTemplate}"
								  IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}">
						<assists:ToggleButtonAssists.InnerContent>
							<TextBlock Text="123"/>
						</assists:ToggleButtonAssists.InnerContent>
						
					</ToggleButton>
					<Border x:Name="ExpanderContent"
							IsVisible="{TemplateBinding IsExpanded, Mode=TwoWay}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							MinHeight="{TemplateBinding MinHeight}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Padding="{TemplateBinding Padding}">
						<ContentPresenter x:Name="PART_ContentPresenter"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Foreground="{TemplateBinding Foreground}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</DockPanel>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:left /template/ ToggleButton#ExpanderHeader, ^:right /template/ ToggleButton#ExpanderHeader">
			<Setter Property="VerticalAlignment" Value="Stretch" />
		</Style>

		<Style Selector="^:not(:expanded) /template/ ToggleButton#ExpanderHeader">
			<Setter Property="CornerRadius" Value="{Binding $parent[Expander].CornerRadius}" />
		</Style>
		<Style Selector="^:expanded:up /template/ ToggleButton#ExpanderHeader">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:up /template/ Border#ExpanderContent">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:down /template/ ToggleButton#ExpanderHeader">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:down /template/ Border#ExpanderContent">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:left /template/ ToggleButton#ExpanderHeader">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:left /template/ Border#ExpanderContent">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:right /template/ ToggleButton#ExpanderHeader">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
		</Style>
		<Style Selector="^:expanded:right /template/ Border#ExpanderContent">
			<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
		</Style>

		<Style Selector="^:left /template/ ToggleButton#ExpanderHeader">
			<Setter Property="DockPanel.Dock" Value="Right" />
		</Style>
		<Style Selector="^:up /template/ ToggleButton#ExpanderHeader">
			<Setter Property="DockPanel.Dock" Value="Bottom" />
		</Style>
		<Style Selector="^:right /template/ ToggleButton#ExpanderHeader">
			<Setter Property="DockPanel.Dock" Value="Left" />
		</Style>
		<Style Selector="^:down /template/ ToggleButton#ExpanderHeader">
			<Setter Property="DockPanel.Dock" Value="Top" />
		</Style>


	</ControlTheme>

</ResourceDictionary>
