<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:ripple="using:AntDesign.Controls.Ripple"
					xmlns:assists="using:AntDesign.Assists">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="20">
				<Button Content="Click Me!" />
				<Button Classes="accent" Content="Click Me!" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type Button}" TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.HoverBackground" Value="{DynamicResource Transparent}" />
		<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonHoverDefaultForeground}" />
		<Setter Property="assists:ButtonAssists.HoverBorderBrush" Value="{DynamicResource ButtonHoverDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource Transparent}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonPressedDefaultForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource ButtonPressedDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="0.35"/>
		<Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ButtonCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="RenderTransform" Value="none" />
		<Setter Property="Template">
			<ControlTemplate>
				<ripple:RippleEffect CornerRadius="{TemplateBinding CornerRadius}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
								      Background="{TemplateBinding Background}"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      Padding="{TemplateBinding Padding}"
								      RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.HoverBorderBrush}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.HoverForeground}" />
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.HoverBackground}" />
		</Style>

		<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
		</Style>

		<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
				<Setter Property="Foreground" Value="{DynamicResource ButtonDangerBrush}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ButtonDangerBrush}" />
				<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonDangerHoverBrush}" />
				<Setter Property="assists:ButtonAssists.HoverBorderBrush" Value="{DynamicResource ButtonDangerHoverBrush}" />
				<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonDangerPressedBrush}" />
				<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource ButtonDangerPressedBrush}" />
				<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource DangerRippleColor}"/>
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="PrimaryButtonTheme" TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource ButtonFullBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ButtonFullForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.HoverBackground" Value="{DynamicResource ButtonHoverFullBackground}" />
		<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonFullForeground}" />
		<Setter Property="assists:ButtonAssists.HoverBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource ButtonPressedFullBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonFullForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="0.35"/>
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="{DynamicResource ButtonCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="RenderTransform" Value="none" />
		<Setter Property="Template">
			<ControlTemplate>
				<ripple:RippleEffect CornerRadius="{TemplateBinding CornerRadius}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  CornerRadius="{TemplateBinding CornerRadius}"
									  Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  Padding="{TemplateBinding Padding}"
									  RecognizesAccessKey="True"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.HoverBackground}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.HoverForeground}" />
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.HoverBorderBrush}" />
		</Style>

		<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
		</Style>

		<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
			<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="Background" Value="{DynamicResource ButtonDangerBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource ButtonFullForeground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
				<Setter Property="assists:ButtonAssists.HoverBackground" Value="{DynamicResource ButtonDangerHoverBrush}" />
				<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource ButtonDangerPressedBrush}" />
				<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource DangerRippleColor}"/>
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="TextButtonTheme" TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.HoverBackground" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonDefaultForeground}" />
		<Setter Property="assists:ButtonAssists.HoverBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonDefaultForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="0.35"/>
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="{DynamicResource ButtonCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="RenderTransform" Value="none" />
		<Setter Property="Transitions">
			<Transitions>
				<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
			</Transitions>
		</Setter>

		<Setter Property="Template">
			<ControlTemplate>
				<ripple:RippleEffect CornerRadius="{TemplateBinding CornerRadius}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
								      Background="{TemplateBinding Background}"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      Padding="{TemplateBinding Padding}"
								      RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.HoverBorderBrush}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.HoverForeground}" />
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.HoverBackground}" />
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^">
				<Setter Property="RenderTransform" Value="scale(0.9)" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			</Style>

		</Style>

		<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
				<Setter Property="Foreground" Value="{DynamicResource ButtonDangerBrush}" />
				<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonDangerHoverBrush}" />
				<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonDangerPressedBrush}" />
				<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource DangerRippleColor}"/>
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="LinkButtonTheme" TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ButtonFullBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.HoverBackground" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonHoverFullBackground}" />
		<Setter Property="assists:ButtonAssists.HoverBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource ButtonDefaultBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonPressedFullBackground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="0.35"/>
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="{DynamicResource ButtonCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="RenderTransform" Value="none" />
		<Setter Property="Transitions">
			<Transitions>
				<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
			</Transitions>
		</Setter>

		<Setter Property="Template">
			<ControlTemplate>
				<ripple:RippleEffect CornerRadius="{TemplateBinding CornerRadius}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}"
									 IsRipple="false">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
								      Background="{TemplateBinding Background}"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      Padding="{TemplateBinding Padding}"
								      RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.HoverBorderBrush}" />
			<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.HoverForeground}" />
			<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.HoverBackground}" />
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^">
				<Setter Property="RenderTransform" Value="scale(0.9)" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			</Style>
		</Style>

		<Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="Foreground" Value="{DynamicResource ButtonDangerBrush}" />
				<Setter Property="assists:ButtonAssists.HoverForeground" Value="{DynamicResource ButtonDangerHoverBrush}" />
				<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource ButtonDangerPressedBrush}" />
			</Style>
		</Style>
	</ControlTheme>

</ResourceDictionary>