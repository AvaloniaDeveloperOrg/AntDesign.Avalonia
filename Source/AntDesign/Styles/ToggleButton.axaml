<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:ripple="using:AntDesign.Controls.Ripple"
					xmlns:assists="using:AntDesign.Assists"
                    x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="20">
				<ToggleButton Content="Click Me!" />
				<ToggleButton Content="Disabled" IsEnabled="False" />
				<ToggleButton Content="Three state" IsThreeState="True" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource ToggleButtonPointerOverBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource ToggleButtonPointerOverForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource ToggleButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource ToggleButtonPressedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource ToggleButtonPressedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource ToggleButtonPressedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource ToggleButtonCheckedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource ToggleButtonCheckedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource ToggleButtonCheckedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBackground" Value="{DynamicResource ToggleButtonIndeterminateBackground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource ToggleButtonIndeterminateForeground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBorderBrush" Value="{DynamicResource ToggleButtonIndeterminateBorderBrush}" />	
		<Setter Property="assists:ToggleButtonAssists.IsRipple"  Value="true"/>
		<Setter Property="assists:ToggleButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ToggleButtonAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/> 
		<Setter Property="BorderThickness" Value="{DynamicResource OverlayBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource OverlayPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<ControlTemplate TargetType="ToggleButton">
				<ripple:RippleEffect x:Name="{x:Static helpers:PARTNameHelper.PART_Container}" 
									 Background="{TemplateBinding Background}"
									 BorderBrush="{TemplateBinding BorderBrush}"
								     BorderThickness="{TemplateBinding BorderThickness}"
									 CornerRadius="{TemplateBinding CornerRadius}" 
									 IsRipple="{TemplateBinding assists:ToggleButtonAssists.IsRipple}"
									 RippleColor="{TemplateBinding assists:ToggleButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ToggleButtonAssists.RippleColorAlpha}">
					<Grid ColumnDefinitions="Auto, *"
						  Margin="{TemplateBinding Padding}">
						<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}" 
										  Grid.Column="1"
										  Foreground="{TemplateBinding Foreground}" 
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" 
										  RecognizesAccessKey="True" 
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  RenderTransform ="none">
							<ContentPresenter.Transitions>
								<Transitions>
									<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
								</Transitions>
							</ContentPresenter.Transitions>
						</ContentPresenter>
						<ContentPresenter x:Name="PART_InnerContent" 
										  Grid.Column="0"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center" 
										  Content="{TemplateBinding assists:ToggleButtonAssists.InnerContent}"
										  ContentTemplate="{TemplateBinding assists:ToggleButtonAssists.InnerContentTemplate}"
										  Foreground="{TemplateBinding Foreground}"/>
					</Grid>
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_Container">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverForeground}" />
			</Style>
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_Container">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ToggleButtonAssists.PressedRenderTransform}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.PressedForeground}" />
			</Style>
		</Style>

		<Style Selector="^:checked">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_Container">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedForeground}" />
			</Style>
		</Style>

		<Style Selector="^:indeterminate">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_Container">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateForeground}" />
			</Style>
		</Style>
		
		<Style Selector="^:disabled">
			<Setter Property="Cursor" Value="No" />
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource DangerPressedBrush}" /> 
				<Setter Property="assists:ToggleButtonAssists.RippleColor"  Value="{DynamicResource DangerRippleColor}"/>
			</Style>
		</Style>

		<Style Selector="^.end">
			<Setter Property="Template">
				<ControlTemplate TargetType="ToggleButton">
					<ripple:RippleEffect x:Name="{x:Static helpers:PARTNameHelper.PART_Container}"
										 Background="{TemplateBinding Background}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 IsRipple="{TemplateBinding assists:ToggleButtonAssists.IsRipple}"
										 RippleColor="{TemplateBinding assists:ToggleButtonAssists.RippleColor}"
										 RippleColorAlpha="{TemplateBinding assists:ToggleButtonAssists.RippleColorAlpha}">
						<Grid ColumnDefinitions="*,Auto" 
							  Margin="{TemplateBinding Padding}">
							<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
											  Foreground="{TemplateBinding Foreground}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}" 
											  RecognizesAccessKey="True"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  RenderTransform ="none">
								<ContentPresenter.Transitions>
									<Transitions>
										<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
									</Transitions>
								</ContentPresenter.Transitions>
							</ContentPresenter>
							<ContentPresenter x:Name="PART_InnerContent"
											  Grid.Column="1" 
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Content="{TemplateBinding assists:ToggleButtonAssists.InnerContent}"
											  ContentTemplate="{TemplateBinding assists:ToggleButtonAssists.InnerContentTemplate}"
											  Foreground="{TemplateBinding Foreground}"/>
						</Grid>
					</ripple:RippleEffect>
				</ControlTemplate>
			</Setter>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="PrimaryToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonPrimaryBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ToggleButtonPrimaryForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonPrimaryBorderBrush}" />	
		<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource ToggleButtonPrimaryPointerOverBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource ToggleButtonPrimaryPointerOverForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource ToggleButtonPrimaryPointerOverBorderBrush}" />		
		<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource ToggleButtonPrimaryPressedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource ToggleButtonPrimaryPressedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource ToggleButtonPrimaryPressedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource ToggleButtonPrimaryCheckedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource ToggleButtonPrimaryCheckedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource ToggleButtonPrimaryCheckedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBackground" Value="{DynamicResource ToggleButtonPrimaryIndeterminateBackground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource ToggleButtonPrimaryIndeterminateForeground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBorderBrush" Value="{DynamicResource ToggleButtonPrimaryIndeterminateBorderBrush}" />
		
		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource ButtonPrimaryPointerOverForeground}" />
				<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
				<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
			</Style>
		</Style>
	</ControlTheme>
	
</ResourceDictionary>
