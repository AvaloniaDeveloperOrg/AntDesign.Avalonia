<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:ripple="using:AntDesign.Controls.Ripple"
					xmlns:assists="using:AntDesign.Assists"
                    x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="20">
				<ToggleButton Content="Click Me!" />
				<ToggleButton Content="Disabled" IsEnabled="False" />
				<ToggleButton Content="Three state" IsThreeState="True" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
		<Setter Property="Background" Value="{DynamicResource TooggleButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource TooggleButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TooggleButtonBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource TooggleButtonPointerOverBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource TooggleButtonPointerOverForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource TooggleButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource TooggleButtonPressedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource TooggleButtonPressedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource TooggleButtonPressedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource TooggleButtonCheckedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource TooggleButtonCheckedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource TooggleButtonCheckedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBackground" Value="{DynamicResource TooggleButtonIndeterminateBackground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource TooggleButtonIndeterminateForeground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBorderBrush" Value="{DynamicResource TooggleButtonIndeterminateBorderBrush}" />	
		<Setter Property="assists:ToggleButtonAssists.IsRipple"  Value="true"/>
		<Setter Property="assists:ToggleButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ToggleButtonAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource ToogleButtonBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ToogleButtonCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ToogleButtonPadding}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<ControlTemplate>
				<ripple:RippleEffect CornerRadius="{TemplateBinding CornerRadius}"
									 IsRipple="{TemplateBinding assists:ToggleButtonAssists.IsRipple}"
									 RippleColor="{TemplateBinding assists:ToggleButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ToggleButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
								      Background="{TemplateBinding Background}"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      Padding="{TemplateBinding Padding}"
								      RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  RenderTransform ="none">
						<ContentPresenter.Transitions>
							<Transitions>
								<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverBackground}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverForeground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.PointerOverBorderBrush}" />
			</Style>
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ToggleButtonAssists.PressedRenderTransform}" />
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.PressedBackground}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.PressedForeground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.PressedBorderBrush}" />
			</Style>
		</Style>

		<Style Selector="^:checked">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedBackground}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedForeground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.CheckedBorderBrush}" />
			</Style>
		</Style>

		<Style Selector="^:indeterminate">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateBackground}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateForeground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ToggleButtonAssists.IndeterminateBorderBrush}" />
			</Style>
		</Style>
		
		<Style Selector="^:disabled">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
				<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			</Style>
		</Style>

		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource DangerPressedBrush}" /> 
				<Setter Property="assists:ToggleButtonAssists.RippleColor"  Value="{DynamicResource DangerRippleColor}"/>
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="PrimaryToggleButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="Background" Value="{DynamicResource TooggleButtonPrimaryBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource TooggleButtonPrimaryForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TooggleButtonPrimaryBorderBrush}" />	
		<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource TooggleButtonPrimaryPointerOverBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource TooggleButtonPrimaryPointerOverForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PointerOverBorderBrush" Value="{DynamicResource TooggleButtonPrimaryPointerOverBorderBrush}" />		
		<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource TooggleButtonPrimaryPressedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource TooggleButtonPrimaryPressedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.PressedBorderBrush" Value="{DynamicResource TooggleButtonPrimaryPressedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource TooggleButtonPrimaryCheckedBackground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource TooggleButtonPrimaryCheckedForeground}" />
		<Setter Property="assists:ToggleButtonAssists.CheckedBorderBrush" Value="{DynamicResource TooggleButtonPrimaryCheckedBorderBrush}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBackground" Value="{DynamicResource TooggleButtonPrimaryIndeterminateBackground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource TooggleButtonPrimaryIndeterminateForeground}" />
		<Setter Property="assists:ToggleButtonAssists.IndeterminateBorderBrush" Value="{DynamicResource TooggleButtonPrimaryIndeterminateBorderBrush}" />
		
		<Style Selector="^.danger">
			<Style Selector="^">
				<Setter Property="assists:ToggleButtonAssists.PointerOverBackground" Value="{DynamicResource DangerPointerOverBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PointerOverForeground" Value="{DynamicResource ButtonPrimaryPointerOverForeground}" />
				<Setter Property="assists:ToggleButtonAssists.PressedBackground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.PressedForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedBackground" Value="{DynamicResource DangerPressedBrush}" />
				<Setter Property="assists:ToggleButtonAssists.CheckedForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
				<Setter Property="assists:ToggleButtonAssists.IndeterminateForeground" Value="{DynamicResource ButtonPrimaryPressedForeground}" />
			</Style>
		</Style>
	</ControlTheme>
	
</ResourceDictionary>
