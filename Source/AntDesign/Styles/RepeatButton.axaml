<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:ripple="using:AntDesign.Controls.Ripple"
					xmlns:assists="using:AntDesign.Assists"
					x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="20">
				<RepeatButton Content="Click Me!" />
				<RepeatButton Content="Disabled" IsEnabled="False" />
				<RepeatButton Content="Rounded" CornerRadius="16"/>
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}" />
		<Setter Property="Background" Value="{DynamicResource RepeatButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource RepeatButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RepeatButtonPointerOverBackground}" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RepeatButtonPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBorderBrush" Value="{DynamicResource RepeatButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RepeatButtonPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RepeatButtonPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource RepeatButtonPressedBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedRenderTransform"  Value="scale(0.98)"/>
		<Setter Property="assists:ButtonAssists.IsRipple"  Value="{DynamicResource IsAnimable}"/>
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource OverlayBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
		<Setter Property="Padding" Value="{StaticResource OverlayPadding}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate TargetType="RepeatButton">
				<ripple:RippleEffect x:Name="{x:Static helpers:PARTNameHelper.PART_LayoutRoot}"
								     Background="{TemplateBinding Background}"		
									 BorderBrush="{TemplateBinding BorderBrush}"
								     BorderThickness="{TemplateBinding BorderThickness}"
									 CornerRadius="{TemplateBinding CornerRadius}"
									 Padding="{TemplateBinding Padding}"
									 IsRipple="{TemplateBinding assists:ButtonAssists.IsRipple}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
									  Foreground="{TemplateBinding Foreground}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  RenderTransform="none">
						<ContentPresenter.Transitions>
							<Transitions>
								<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PointerOverBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PointerOverBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PointerOverForeground}" />
			</Style>
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ButtonAssists.PressedRenderTransform}"/>
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			</Style>
		</Style>

		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.5"/>
			<!--<Setter Property="Background" Value="{DynamicResource DisableBackground}" />-->
			<!--<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />-->
			<!--<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />-->
		</Style>

		<Style Selector="^.round">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding Bounds, Converter={StaticResource Size2RoundConverter}}" />
			</Style>
		</Style>

		<Style Selector="^.left">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
			</Style>
		</Style>

		<Style Selector="^.center">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="0" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

		<Style Selector="^.right">
			<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ ripple|RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

	</ControlTheme>

	<ControlTheme x:Key="PrimaryRepeatButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
		<Setter Property="Background" Value="{DynamicResource ButtonPrimaryBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ButtonPrimaryForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonPrimaryBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RepeatButtonPrimaryPointerOverBackground}" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RepeatButtonPrimaryPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBorderBrush" Value="{DynamicResource RepeatButtonPrimaryPointerOverBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RepeatButtonPrimaryPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RepeatButtonPrimaryPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource RepeatButtonPrimaryPressedBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />

	</ControlTheme>

	<ControlTheme x:Key="ShadowRepeatButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
		<Setter Property="Template">
			<ControlTemplate TargetType="RepeatButton">
				<Border x:Name="{x:Static helpers:PARTNameHelper.PART_LayoutRoot}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						Padding="{TemplateBinding Padding}"
						BoxShadow="{TemplateBinding assists:ButtonAssists.Shadows}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
									  Foreground="{TemplateBinding Foreground}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  RenderTransform="none">
						<ContentPresenter.Transitions>
							<Transitions>
								<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
				</Border>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PointerOverBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PointerOverBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PointerOverForeground}" />
			</Style>
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ButtonAssists.PressedRenderTransform}"/>
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			</Style>
		</Style>

		<Style Selector="^.round">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding Bounds, Converter={StaticResource Size2RoundConverter}}" />
			</Style>
		</Style>
		
		<Style Selector="^.left">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
			</Style>
		</Style>

		<Style Selector="^.center">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="0" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ Border#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ Border#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

		<Style Selector="^.right">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ Border#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ Border#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

	</ControlTheme>

</ResourceDictionary>
