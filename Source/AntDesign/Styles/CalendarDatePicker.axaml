<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=netstandard"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:assists="using:AntDesign.Assists"
                    x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Margin="20, 20, 20, 200">
			<CalendarDatePicker Width="200" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
		<Setter Property="IsTodayHighlighted" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource CalendarDatePickerForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrush}" />
		<Setter Property="assists:CalendarDatePickerAssists.PointerOverBorderBrush" Value="{DynamicResource CalendarDatePickerPointerOverBorderBrush}"/>
		<Setter Property="assists:CalendarDatePickerAssists.FocusBorderBrush" Value="{DynamicResource CalendarDatePickerFocusBorderBrush}"/>
		<Setter Property="assists:CalendarDatePickerAssists.UseFloatingWatermark" Value="False"/>
		<Setter Property="assists:CalendarDatePickerAssists.FloatingForeground" Value="{DynamicResource CalendarDatePickerFloatingForeground}"/>
		<Setter Property="assists:CalendarDatePickerAssists.RippleColor" Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:CalendarDatePickerAssists.RippleColorAlpha" Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="assists:CalendarDatePickerAssists.PopupBackground" Value="{DynamicResource CalendarDatePickerPopupBackground}"/>
		<Setter Property="assists:CalendarDatePickerAssists.PopupBorderBrush" Value="{DynamicResource CalendarDatePickerPopupBorderBrush}"/>
		<Setter Property="assists:CalendarDatePickerAssists.PopupMargin" Value="{DynamicResource OverlayMargin}"/>
		<Setter Property="assists:CalendarDatePickerAssists.PopupCornerRadius" Value="{DynamicResource PopupCornerRadius}"/>
		<Setter Property="assists:CalendarDatePickerAssists.PopupBorderThickness" Value="{DynamicResource BorderThickness}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource OverlayBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource OverlayPadding}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate TargetType="CalendarDatePicker">
				<Panel>
					<TextBox x:Name="{x:Static helpers:PARTNameHelper.PART_TextBox}"
							 Padding="{TemplateBinding Padding}"
							 Width="{TemplateBinding Width}"
							 Height="{TemplateBinding Height}"
							 Watermark="{TemplateBinding Watermark}"
							 Foreground="{TemplateBinding Foreground}"
							 Background="{TemplateBinding Background}"
							 BorderBrush="{TemplateBinding BorderBrush}"
							 CornerRadius="{TemplateBinding CornerRadius}"
							 BorderThickness="{TemplateBinding BorderThickness}"
							 FontSize="{TemplateBinding FontSize}"
							 FontFamily="{TemplateBinding FontFamily}"
							 FontWeight="{TemplateBinding FontWeight}"
							 UseFloatingWatermark="{TemplateBinding assists:CalendarDatePickerAssists.UseFloatingWatermark}"
							 assists:TextBoxAssists.PointerOverBorderBrush="{TemplateBinding assists:CalendarDatePickerAssists.PointerOverBorderBrush}"
							 assists:TextBoxAssists.FocusBorderBrush="{TemplateBinding assists:CalendarDatePickerAssists.FocusBorderBrush}"
							 assists:TextBoxAssists.FloatingForeground="{TemplateBinding assists:CalendarDatePickerAssists.FloatingForeground}"
							 assists:TextBoxAssists.RippleColor="{TemplateBinding assists:CalendarDatePickerAssists.RippleColor}"
							 assists:TextBoxAssists.RippleColorAlpha="{TemplateBinding assists:CalendarDatePickerAssists.RippleColorAlpha}"
							 DataValidationErrors.Errors="{TemplateBinding (DataValidationErrors.Errors)}"
							 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
						<TextBox.InnerRightContent>
							<Button x:Name="{x:Static helpers:PARTNameHelper.PART_Button}"
									Focusable="False"
									Margin="0"
									HorizontalAlignment="Right"
									Width="{DynamicResource CalendarDatePickerButtonWidth}"
									BorderBrush="{Binding $parent.BorderBrush}"
									assists:ButtonAssists.PointerOverBorderBrush="{Binding $parent.(assists:TextBoxAssists.PointerOverBorderBrush)}"
									assists:ButtonAssists.PressedBorderBrush="{Binding $parent.(assists:TextBoxAssists.FocusBorderBrush)}"
									assists:ButtonAssists.RippleColor="{Binding $parent.(assists:TextBoxAssists.RippleColor)}"
									BorderThickness="{DynamicResource BorderThickness}"
									CornerRadius="{DynamicResource CalendarDatePickerButtonCornerRadius}">
								<Button.Content>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Source={x:Static sys:DateTime.Today}, Path=Day}" IsVisible="False"/>
										<Path Stretch="Uniform" 
											  Width="{DynamicResource CalendarDatePickerButtonIconWidth}"
											  Opacity="0.5"
											  VerticalAlignment="Center"
											  Fill="{Binding $parent[Button].Foreground}"
											  Data="{StaticResource CalendarGeometry}" />
									</StackPanel>
								</Button.Content>
							</Button>
						</TextBox.InnerRightContent>
					</TextBox>
					
					<Popup x:Name="{x:Static helpers:PARTNameHelper.PART_Popup}"
						   IsLightDismissEnabled="True"
						   PlacementTarget="{TemplateBinding}"
						   HorizontalOffset="{TemplateBinding assists:CalendarDatePickerAssists.PopupMargin, Converter={StaticResource PopupHorizontalOffsetConverter}}">
						<Border x:Name="{x:Static helpers:PARTNameHelper.PART_SuggestionsContainer}"
								ClipToBounds="False"
								Padding="{DynamicResource OverlayPadding}"
								Margin="{TemplateBinding assists:CalendarDatePickerAssists.PopupMargin}"
								Background="{TemplateBinding assists:CalendarDatePickerAssists.PopupBackground}"
								BorderBrush="{TemplateBinding assists:CalendarDatePickerAssists.PopupBorderBrush}"
								BorderThickness="{TemplateBinding assists:CalendarDatePickerAssists.PopupBorderThickness}"
								CornerRadius="{TemplateBinding assists:CalendarDatePickerAssists.PopupCornerRadius}"
								BoxShadow="{DynamicResource CalendarDatePickerShadow}">
							<Calendar x:Name="{x:Static helpers:PARTNameHelper.PART_Calendar}"
									  FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
									  IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
									  BorderThickness="0"
									  SelectedDate="{TemplateBinding SelectedDate, Mode=TwoWay}"
									  DisplayDate="{TemplateBinding DisplayDate}"
									  DisplayDateStart="{TemplateBinding DisplayDateStart}"
									  DisplayDateEnd="{TemplateBinding DisplayDateEnd}" />
						</Border>
					</Popup>
				</Panel>
			</ControlTemplate>
		</Setter>

		<!-- Pressed State -->
		<Style Selector="^:pressed">

		</Style>

		<!-- Pointer-over State -->
		<Style Selector="^:pointerover">

		</Style>

		<!-- Disabled State -->
		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.5"/>
		</Style>

		<!-- Focused State -->
		<!--<Style Selector="^:focus-within:not(CalendarDatePicker:focus)">-->

		<!--</Style>-->

		<!-- Error State -->
		<Style Selector="^:error">
			<Style Selector="^ /template/ Button#PART_Button">
				<Setter Property="BorderBrush"  Value="Red"/>
				<Setter Property="assists:ButtonAssists.RippleColor"  Value="Red"/>
			</Style>
		</Style>


	</ControlTheme>

</ResourceDictionary>
