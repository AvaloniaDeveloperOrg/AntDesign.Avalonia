<ResourceDictionary xmlns="https://github.com/avaloniaui"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:helpers="using:AntDesign.Helpers"
					xmlns:assists="using:AntDesign.Assists"
					xmlns:ripple="using:AntDesign.Controls.Ripple"
					x:CompileBindings="True">

	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="10">
				<RadioButton Content="Option 1" Background="Green" />
				<RadioButton Content="Option 2" />
				<RadioButton IsEnabled="False" Content="Option 3" />
				<RadioButton Content="Option 2" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type RadioButton}" TargetType="RadioButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}" />
		<Setter Property="Background" Value="{DynamicResource RadioButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RadioButtonPointerOverBackground}" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RadioButtonPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBorderBrush" Value="{DynamicResource RadioButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RadioButtonPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RadioButtonPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource RadioButtonPressedBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource OverlayPadding}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate TargetType="RadioButton">
				<Border Name="RootBorder"
					    Background="{TemplateBinding Background}"
					    BorderBrush="{TemplateBinding BorderBrush}"
					    BorderThickness="{TemplateBinding BorderThickness}"
					    CornerRadius="{TemplateBinding CornerRadius}">
					<Grid ColumnDefinitions="20,*">
						<Panel VerticalAlignment="Center">
							<Ellipse Name="OuterEllipse"
									 Opacity="0"
								     Fill="Transparent"
								     Width="{DynamicResource RadioButtonOuterEllipseWidth}"
								     Height="{DynamicResource RadioButtonOuterEllipseHeight}"
								     Stroke="{TemplateBinding assists:ButtonAssists.RippleColor, Converter={StaticResource ColorToBrushConverter}}"
								     StrokeThickness="{DynamicResource RadioButtonStrokeThickness}"
								     UseLayoutRounding="False"
									 RenderTransform="none">
								<Ellipse.Transitions>
									<Transitions>
										<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
									</Transitions>
								</Ellipse.Transitions>
							</Ellipse>

							<Ellipse Name="CheckOuterEllipse"
								     Opacity="1"
								     Fill="Transparent"
								     Width="{DynamicResource RadioButtonOuterEllipseWidth}"
								     Height="{DynamicResource RadioButtonOuterEllipseHeight}"
								     Stroke="{DynamicResource RadioButtonOuterStroke}"
								     StrokeThickness="{DynamicResource RadioButtonStrokeThickness}"
								     UseLayoutRounding="False"/>

							<Ellipse Name="CheckGlyph"
								     Opacity="0"
								     Width="{DynamicResource RadioButtonInnerEllipseWidth}"
								     Height="{DynamicResource RadioButtonInnerEllipseHeight}"
								     Stroke="Transparent"
									 StrokeThickness="0"
								     Fill="{DynamicResource RadioButtonInnerFill}"
								     UseLayoutRounding="False"
									 RenderTransform="scale(0.1)">
								<Ellipse.Transitions>
									<Transitions>
										<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
									</Transitions>
								</Ellipse.Transitions>
							</Ellipse>
						</Panel>

						<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
							              Grid.Column="1"
							              Margin="{TemplateBinding Padding}"
							              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							              Content="{TemplateBinding Content}"
							              ContentTemplate="{TemplateBinding ContentTemplate}"
							              Foreground="{TemplateBinding Foreground}"
							              CornerRadius="{TemplateBinding CornerRadius}"
										  RecognizesAccessKey="True" />
					</Grid>
				</Border>
			</ControlTemplate>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PointerOverForeground}"/>
			</Style>
			<Style Selector="^ /template/ Ellipse#CheckOuterEllipse">
				<Setter Property="Stroke" Value="{TemplateBinding assists:ButtonAssists.PointerOverBorderBrush}" />
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}"/>
			</Style>
			<Style Selector="^ /template/ Ellipse#OuterEllipse">
				<Setter Property="Fill" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
				<Setter Property="RenderTransform" Value="scale(2.0)" />
			</Style>
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.5"/>
		</Style>

		<!--  Checked State  -->
		<Style Selector="^:checked">
			<Style Selector="^ /template/ Ellipse#OuterEllipse">
				<Setter Property="Opacity" Value="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}" />
			</Style>

			<Style Selector="^ /template/ Ellipse#CheckOuterEllipse">
				<Setter Property="Stroke" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
				<Setter Property="Fill" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			</Style>

			<Style Selector="^ /template/ Ellipse#CheckGlyph">
				<Setter Property="Opacity" Value="1" />
				<Setter Property="RenderTransform" Value="scale(1.0)" />
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="AntDesignLikeButtonStyle" TargetType="RadioButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}" />
		<Setter Property="Width" Value="{DynamicResource ButtonWidth}" />
		<Setter Property="Height" Value="{DynamicResource ButtonHeight}" />
		<Setter Property="Background" Value="{DynamicResource RadioLikeButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource RadioLikeButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource RadioLikeButtonBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RadioLikeButtonPointerOverBackground}" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RadioLikeButtonPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBorderBrush" Value="{DynamicResource RadioLikeButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RadioLikeButtonPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RadioLikeButtonPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource RadioLikeButtonPressedBorderBrush}" />
		<Setter Property="assists:ButtonAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ButtonAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="assists:ButtonAssists.PressedRenderTransform"  Value="scale(0.98)"/>
		<Setter Property="BorderThickness" Value="{DynamicResource OverlayBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource OverlayPadding}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<ControlTemplate TargetType="RadioButton">
				<ripple:RippleEffect x:Name="{x:Static helpers:PARTNameHelper.PART_LayoutRoot}"
									 Background="{TemplateBinding Background}"
									 BorderBrush="{TemplateBinding BorderBrush}"
									 BorderThickness="{TemplateBinding BorderThickness}"
									 CornerRadius="{TemplateBinding CornerRadius}"
									 Padding="{TemplateBinding Padding}"
									 RippleColor="{TemplateBinding assists:ButtonAssists.RippleColor}"
									 RippleColorAlpha="{TemplateBinding assists:ButtonAssists.RippleColorAlpha}">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
									  Foreground="{TemplateBinding Foreground}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
									  RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  RenderTransform ="none">
						<ContentPresenter.Transitions>
							<Transitions>
								<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
				</ripple:RippleEffect>
			</ControlTemplate>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PointerOverBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PointerOverBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PointerOverForeground}" />
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ButtonAssists.PressedRenderTransform}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			</Style>
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<!--  Checked State  -->
		<Style Selector="^:checked">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ButtonAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ButtonAssists.PressedRenderTransform}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}" />
			</Style>
		</Style>

		<Style Selector="^.round">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding Bounds, Converter={StaticResource Size2RoundConverter}}" />
			</Style>
		</Style>

		<Style Selector="^.left">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
			</Style>
		</Style>

		<Style Selector="^.center">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="0" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:checked">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

		<Style Selector="^.right">
			<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
				<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
				<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness, Converter={StaticResource NoLeftBorderThickness}}" />
			</Style>
			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:pressed">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
			<Style Selector="^:checked">
				<Style Selector="^ /template/ RippleEffect#PART_LayoutRoot">
					<Setter Property="Margin" Value="{TemplateBinding BorderThickness, Converter={StaticResource OnlyLeftReverseMargin}}"/>
					<Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
				</Style>
			</Style>
		</Style>

	</ControlTheme>

	<ControlTheme x:Key="AntDesignLikePrimaryButtonStyle" TargetType="RadioButton"
				  BasedOn="{StaticResource AntDesignLikeButtonStyle}">
		<Setter Property="Background" Value="{DynamicResource RadioLikePrimaryButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource RadioLikePrimaryButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource RadioLikePrimaryButtonBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RadioLikePrimaryButtonPointerOverBackground }" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RadioLikePrimaryButtonPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBorderBrush" Value="{DynamicResource RadioLikePrimaryButtonPointerOverBorderBrush}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RadioLikePrimaryButtonPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RadioLikePrimaryButtonPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBorderBrush" Value="{DynamicResource RadioLikePrimaryButtonPressedBorderBrush }" />
	</ControlTheme>

	<ControlTheme x:Key="AntDesignLikeMenuStyle" TargetType="RadioButton">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}" />
		<Setter Property="Background" Value="{DynamicResource RadioLikeMenuBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource RadioLikeMenuForeground}" />
		<Setter Property="assists:ButtonAssists.PointerOverBackground" Value="{DynamicResource RadioLikeMenuPointerOverBackground}" />
		<Setter Property="assists:ButtonAssists.PointerOverForeground" Value="{DynamicResource RadioLikeMenuPointerOverForeground}" />
		<Setter Property="assists:ButtonAssists.PressedBackground" Value="{DynamicResource RadioLikeMenuPressedBackground}" />
		<Setter Property="assists:ButtonAssists.PressedForeground" Value="{DynamicResource RadioLikeMenuPressedForeground}" />
		<Setter Property="assists:ButtonAssists.PressedRenderTransform"  Value="scale(0.98)"/>
		<Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource OverlayPadding}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate TargetType="RadioButton">
				<Grid RowDefinitions="*,Auto,Auto">
					<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
									  Grid.Row="0"
									  Foreground="{TemplateBinding Foreground}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Content="{TemplateBinding Content}"
								      ContentTemplate="{TemplateBinding ContentTemplate}"
									  Margin="{TemplateBinding Padding}"
									  RecognizesAccessKey="True"
								      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  RenderTransform ="none">
						<ContentPresenter.Transitions>
							<Transitions>
								<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
					<Panel Grid.Row="1" Height="{DynamicResource RadioButtonSpacing}"/>
					<Border x:Name="PART_Decorator" Grid.Row="2" Height="{DynamicResource RadioButtonDecoratorHeight}" Background="{TemplateBinding Background}"/>
				</Grid>
			</ControlTemplate>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ Border#PART_Decorator">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PointerOverBackground}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PointerOverForeground}"/>
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Style Selector="^ /template/ Border#PART_Decorator">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="RenderTransform" Value="{TemplateBinding assists:ButtonAssists.PressedRenderTransform}" />
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}"/>
			</Style>
		</Style>

		<!--  Checked State  -->
		<Style Selector="^:checked">
			<Style Selector="^ /template/ Border#PART_Decorator">
				<Setter Property="Background" Value="{TemplateBinding assists:ButtonAssists.PressedBackground}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ButtonAssists.PressedForeground}"/>
			</Style>
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<Style Selector="^.top">
			<Setter Property="Template">
				<ControlTemplate TargetType="RadioButton">
					<Grid RowDefinitions="Auto,Auto,*">
						<Border x:Name="PART_Decorator" Grid.Row="0" Height="{DynamicResource RadioButtonDecoratorHeight}" Background="{TemplateBinding Background}"/>
						<Panel Grid.Row="1" Height="{DynamicResource RadioButtonSpacing}"/>
						<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
										  Grid.Row="2"
										  Foreground="{TemplateBinding Foreground}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  Margin="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  RenderTransform ="none">
							<ContentPresenter.Transitions>
								<Transitions>
									<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
								</Transitions>
							</ContentPresenter.Transitions>
						</ContentPresenter>

					</Grid>
				</ControlTemplate>
			</Setter>
		</Style>
		
	</ControlTheme>

</ResourceDictionary>
