<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=netstandard"
					xmlns:helpers="using:AntDesign.Helpers"
                    xmlns:ripple="using:AntDesign.Controls.Ripple"
                    xmlns:assists="using:AntDesign.Assists"
					x:CompileBindings="True">
	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="10">
				<ComboBox PlaceholderText="Select an item">
					<ComboBoxItem>Item 1</ComboBoxItem>
					<ComboBoxItem>Item 2</ComboBoxItem>
				</ComboBox>
				<ComboBox IsEnabled="False"
						  Width="200"
						  SelectedIndex="1"
						  HorizontalContentAlignment="Center">
					<ComboBoxItem>Item 1</ComboBoxItem>
					<ComboBoxItem>Item 2</ComboBoxItem>
				</ComboBox>
				<ComboBox PlaceholderText="Error">
					<DataValidationErrors.Error>
						<sys:Exception>
							<x:Arguments>
								<x:String>Error</x:String>
							</x:Arguments>
						</sys:Exception>
					</DataValidationErrors.Error>
				</ComboBox>
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<Thickness x:Key="ComboBoxTopHeaderMargin">0,0,0,4</Thickness>
	<x:Int32 x:Key="ComboBoxPopupMaxNumberOfItems">15</x:Int32>
	<x:Int32 x:Key="ComboBoxPopupMaxNumberOfItemsThatCanBeShownOnOneSide">7</x:Int32>

	<Thickness x:Key="ComboBoxPadding">12,5,0,7</Thickness>
	<Thickness x:Key="ComboBoxEditableTextPadding">11,5,32,6</Thickness>
	<x:Double x:Key="ComboBoxMinHeight">32</x:Double>

	<ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="FontSize" Value="{DynamicResource FontSize}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
		<Setter Property="assists:ComboBoxAssists.PointerOverBackground" Value="{DynamicResource ComboBoxPointerOverBackground}" />
		<Setter Property="assists:ComboBoxAssists.PointerOverForeground" Value="{DynamicResource ComboBoxPointerOverForeground}" />
		<Setter Property="assists:ComboBoxAssists.PointerOverBorderBrush" Value="{DynamicResource ComboBoxPointerOverBorderBrush}" />
		<Setter Property="assists:ComboBoxAssists.PressedBackground" Value="{DynamicResource ComboBoxPressedBackground}" />
		<Setter Property="assists:ComboBoxAssists.PressedForeground" Value="{DynamicResource ComboBoxPressedForeground}" />
		<Setter Property="assists:ComboBoxAssists.PressedBorderBrush" Value="{DynamicResource ComboBoxPressedBorderBrush}" />
		<Setter Property="assists:ComboBoxAssists.IsRipple"  Value="False"/>
		<Setter Property="assists:ComboBoxAssists.RippleColor"  Value="{DynamicResource RippleColor}"/>
		<Setter Property="assists:ComboBoxAssists.RippleColorAlpha"  Value="{DynamicResource RippleOpacity}"/>
		<Setter Property="assists:ComboBoxAssists.PopupBackground" Value="{DynamicResource ComboBoxPopupBackground}"/>
		<Setter Property="assists:ComboBoxAssists.PopupBorderBrush" Value="{DynamicResource ComboBoxPopupBorderBrush}"/>
		<Setter Property="assists:ComboBoxAssists.PopupBorderThickness" Value="{DynamicResource ComboBoxPopupBorderThickness}"/>
		<Setter Property="assists:ComboBoxAssists.PopupCornerRadius" Value="{DynamicResource ComboBoxPopupCornerRadius}"/>
		<Setter Property="assists:ComboBoxAssists.PopupMargin" Value="{DynamicResource ComboBoxPopupMargin}"/>
		<Setter Property="MaxDropDownHeight" Value="{DynamicResource ComboBoxMaxDropDownHeight}" />
		<Setter Property="PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ComboBoxCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
		<Setter Property="Margin" Value="{DynamicResource ComboBoxMargin}" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="FocusAdorner" Value="{x:Null}" />
		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors Margin="{TemplateBinding Margin}">
					<ripple:RippleEffectx x:Name="{x:Static helpers:PARTNameHelper.PART_BorderElement}"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Padding="{TemplateBinding Padding}"
										  IsRipple="{TemplateBinding assists:ComboBoxAssists.IsRipple}"
										  RippleColor="{TemplateBinding assists:ComboBoxAssists.RippleColor}"
										  RippleColorAlpha="{TemplateBinding assists:ComboBoxAssists.RippleColorAlpha}">
						<Grid ColumnDefinitions="*,Auto">
							<TextBlock x:Name="PlaceholderTextBlock"
									   Grid.Column="0"
									   Text="{TemplateBinding PlaceholderText}"
									   Foreground="{TemplateBinding Foreground}"
									   Opacity="{DynamicResource InnerElementOpacity}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
							<ContentPresenter x:Name="{x:Static helpers:PARTNameHelper.PART_ContentPresenter}"
											  Grid.Column="0"
											  BorderThickness =" 0"
											  CornerRadius="{TemplateBinding CornerRadius}"
											  Content="{TemplateBinding SelectionBoxItem}"
											  ContentTemplate="{TemplateBinding ItemTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

							<Border Grid.Column="1"
									Width="{DynamicResource DropDownGlyphBorderWidth}">
								<PathIcon x:Name="DropDownGlyph"
										  UseLayoutRounding="False"
										  IsHitTestVisible="False"
										  Height="{DynamicResource DropDownGlyphIconHeight}"
										  Width="{DynamicResource DropDownGlyphIconWidth}"
										  Opacity="{DynamicResource InnerElementOpacity}"
										  Foreground="{TemplateBinding Foreground}"
										  Data="{DynamicResource ComboBoxButtonIcon}"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center" />
							</Border>

							<Popup x:Name="{x:Static helpers:PARTNameHelper.PART_Popup}"
								   WindowManagerAddShadowHint="False"
								   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
								   MaxHeight="{TemplateBinding MaxDropDownHeight}"
								   HorizontalOffset="{TemplateBinding assists:ComboBoxAssists.PopupMargin, Converter={StaticResource PopupHorizontalOffsetConverter}}"
								   PlacementTarget="{TemplateBinding}"
								   IsLightDismissEnabled="True"
								   InheritsTransform="True">

								<Popup.MinWidth>
									<MultiBinding Converter="{StaticResource PopupSizeConverter}">
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Bounds.Width"/>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(assists:ComboBoxAssists.PopupMargin)"/>
									</MultiBinding>
								</Popup.MinWidth>

								<Border x:Name="PopupBorder"
										Padding="{DynamicResource ComboBoxPopupPadding}"
										Margin="{TemplateBinding assists:ComboBoxAssists.PopupMargin}"
										Background="{TemplateBinding assists:ComboBoxAssists.PopupBackground}"
										BorderBrush="{TemplateBinding assists:ComboBoxAssists.PopupBorderBrush}"
										BorderThickness="{TemplateBinding assists:ComboBoxAssists.PopupBorderThickness}"
										CornerRadius="{TemplateBinding assists:ComboBoxAssists.PopupCornerRadius}"
										ClipToBounds="False"
										BoxShadow="{DynamicResource ComboBoxShadow}">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ItemsPresenter Name="{x:Static helpers:PARTNameHelper.PART_ItemsPresenter}"
														ItemsPanel="{TemplateBinding ItemsPanel}" />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</ripple:RippleEffectx>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="Background" Value="{TemplateBinding assists:ComboBoxAssists.PointerOverBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ComboBoxAssists.PointerOverBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ComboBoxAssists.PointerOverForeground}" />
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="IsRipple" Value="True" />
				<Setter Property="Background" Value="{TemplateBinding assists:ComboBoxAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ComboBoxAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ComboBoxAssists.PressedForeground}" />
			</Style>
		</Style>

		<!-- Error State -->
		<Style Selector="^:error">
			<Setter Property="assists:ComboBoxAssists.PointerOverBorderBrush" Value="{DynamicResource ErrorBorderBrush}" />
			<Setter Property="assists:ComboBoxAssists.PressedBorderBrush" Value="{DynamicResource ErrorBorderBrush}" />
			<Setter Property="assists:ComboBoxAssists.RippleColor"  Value="{DynamicResource ErrorColor}"/>
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="BorderBrush" Value="{DynamicResource ErrorBackground}" />
			</Style>
		</Style>

		<!--  Focus Pressed State  -->
		<Style Selector="^:focused:pressed">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="IsRipple" Value="True" />
				<Setter Property="Background" Value="{TemplateBinding assists:ComboBoxAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ComboBoxAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ComboBoxAssists.PressedForeground}" />
				<Setter Property="Opacity" Value="{DynamicResource InnerElementOpacity} " />
			</Style>
		</Style>

		<!--  Focused State  -->
		<Style Selector="^:focus-visible">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="IsRipple" Value="True" />
				<Setter Property="Background" Value="{TemplateBinding assists:ComboBoxAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ComboBoxAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ComboBoxAssists.PressedForeground}" />
				<Setter Property="Opacity" Value="{DynamicResource InnerElementOpacity} " />
			</Style>
		</Style>

		<Style Selector="^[IsDropDownOpen=true]:not(:focused)">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="IsRipple" Value="True" />
				<Setter Property="Background" Value="{TemplateBinding assists:ComboBoxAssists.PressedBackground}" />
				<Setter Property="BorderBrush" Value="{TemplateBinding assists:ComboBoxAssists.PressedBorderBrush}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{TemplateBinding assists:ComboBoxAssists.PressedForeground}" />
				<Setter Property="Opacity" Value="{DynamicResource InnerElementOpacity} " />
			</Style>
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Style Selector="^ /template/ RippleEffectx#PART_BorderElement">
				<Setter Property="BorderBrush" Value="{DynamicResource DisableBorderBrush}" />
				<Setter Property="Background" Value="{DynamicResource DisableBackground}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource DisableForeground}" />
			</Style>
		</Style>
	</ControlTheme>

</ResourceDictionary>
